#include <iostream>#include <string>template<class T_CLASS>void print(const T_CLASS& i){ std::cout << i << std::endl;}int main(){ print<int>(1); print<float>(2.3451f); print<double>(3.4); print("hello world"); return 0;}template<class T>class Vextor2D{public: const T& x, y;};//drawingclass Box // NO PARENT{public: // some variables void draw() {  // draw box here }};class Circle // NO PARENT{public: // some variables void draw() {  // draw circle here }};class GeometricObjectInterface{public: // implement here};// And implement an templatized GeometricObject class.int main(){ std::vector<GeometricObjectInterface*> obj_list; obj_list.push_back(new GeometricObject<Implement here>); obj_list.push_back(new GeometricObject<Implement here>); for (auto itr : obj_list)  itr->draw(); return 0;}
